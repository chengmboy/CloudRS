version: '3'
services:
  cloudrs-register:
    networks:
      - cloudrs
      - pinpoint
    build:
      context: ./
      dockerfile: Dockerfile-register
      args:
        - PINPOINT_VERSION=${PINPOINT_VERSION}
        - AGENT_ID=cloudrs-register-1
        - APP_NAME=cloudrs-register
    volumes:
      - data-volume:/pinpoint-agent
    restart: always
    ports:
      - 9000:9991

  cloudrs-config:
    networks:
      - cloudrs
      - pinpoint
    build:
      context: ./
      dockerfile: Dockerfile-config
      args:
        - PINPOINT_VERSION=${PINPOINT_VERSION}
        - AGENT_ID=cloudrs-config-1
        - APP_NAME=cloudrs-config
    volumes:
      - data-volume:/pinpoint-agent
    restart: always


  cloudrs-auth:
    networks:
      - cloudrs
      - pinpoint
    build:
      context: ./
      dockerfile: Dockerfile-auth
      args:
        - PINPOINT_VERSION=${PINPOINT_VERSION}
        - AGENT_ID=cloudrs-auth-1
        - APP_NAME=cloudrs-auth
    volumes:
      - data-volume:/pinpoint-agent
    restart: always

  cloudrs-gateway:
    networks:
      - cloudrs
      - pinpoint
    build:
      context: ./
      dockerfile: Dockerfile-gateway
      args:
        - PINPOINT_VERSION=${PINPOINT_VERSION}
        - AGENT_ID=cloudrs-gateway-1
        - APP_NAME=cloudrs-gateway
    volumes:
      - data-volume:/pinpoint-agent
    restart: always
    ports:
      - 8080:8080

  cloudrs-uc:
    networks:
      - cloudrs
      - pinpoint
    build:
      context: ./
      dockerfile: Dockerfile-uc
      args:
        - PINPOINT_VERSION=${PINPOINT_VERSION}
        - AGENT_ID=cloudrs-uc-1
        - APP_NAME=cloudrs-uc-service
    volumes:
      - data-volume:/pinpoint-agent
    restart: always

  cloudrs-payment:
    networks:
      - cloudrs
      - pinpoint
    build:
      context: ./
      dockerfile: Dockerfile-payment
      args:
        - PINPOINT_VERSION=${PINPOINT_VERSION}
        - AGENT_ID=cloudrs-payment-1
        - APP_NAME=cloudrs-payment-service
    volumes:
      - data-volume:/pinpoint-agent
    restart: always

  #------------------- monitor end-----------------------

  cloudrs-monitor:
    networks:
      - cloudrs
    build:
      context: ./
      dockerfile: Dockerfile-monitor
    restart: always
    ports:
      - 9001:9000

  cloudrs-turbine:
    networks:
      - cloudrs
    build:
      context: ./
      dockerfile: Dockerfile-turbine
    restart: always
    ports:
      - 9002:8600
  #------------------- monitor end-----------------------

  #------------------- paas start-----------------------
  rabbit1:
    image: bijukunjummen/rabbitmq-server:3.7.0
    hostname: rabbit1
    networks:
      - cloudrs
    ports:
      - "16672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=cheng
      - RABBITMQ_DEFAULT_PASS=123456

  rabbit2:
    image: bijukunjummen/rabbitmq-server:3.7.0
    hostname: rabbit2
    networks:
      - cloudrs
    environment:
      - CLUSTERED=true
      - CLUSTER_WITH=rabbit1
      - RAM_NODE=true
    ports:
      - "16673:15672"

  rabbit3:
    image: bijukunjummen/rabbitmq-server:3.7.0
    hostname: rabbit3
    networks:
      - cloudrs
    environment:
      - CLUSTERED=true
      - CLUSTER_WITH=rabbit1

  redis-cluster:
    image: grokzen/redis-cluster:5.0.5
    networks:
      - cloudrs

  mysql-master:
    image: mysql
    volumes:
      - ./mysql/config/master.cnf:/etc/mysql/conf.d/my.cnf
      - ./mysql/init/master_init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - MYSQL_ROOT_PASSWORD=123456
    networks:
      - cloudrs
#
#  mysql-slave:
#    image: mysql
#    volumes:
#      - ./mysql/config/slave.cnf:/etc/mysql/conf.d/my.cnf
#      - ./mysql/init/slave_init.sql:/docker-entrypoint-initdb.d/init.sql
#    environment:
#      - MYSQL_ROOT_PASSWORD=slv
#      - MYSQL_DATABASE=auth
#      - MYSQL_USER=slv
#      - MYSQL_PASSWORD=slv
#    networks:
#      - cloudrs

  #------------------- paas end-----------------------


#  生成pinpoint.jar，pinpiont.config文件，通过卷挂载到具体服务上去
#  pinpoint-agent:
#    container_name: "${PINPOINT_AGENT_NAME}"
#    image: "pinpointdocker/pinpoint-agent:${PINPOINT_VERSION}"
#
#    restart: unless-stopped
#
#    networks:
#      - cloudrs
#    volumes:
#      - data-volume:/pinpoint-agent
#    environment:
#      - COLLECTOR_IP=${COLLECTOR_IP}
#      - COLLECTOR_TCP_PORT=${COLLECTOR_TCP_PORT}
#      - COLLECTOR_STAT_PORT=${COLLECTOR_STAT_PORT}
#      - COLLECTOR_SPAN_PORT=${COLLECTOR_SPAN_PORT}
#      - PROFILER_SAMPLING_RATE=${PROFILER_SAMPLING_RATE}
#      - DEBUG_LEVEL=${AGENT_DEBUG_LEVEL}

  #------------------- pinpoint start-----------------------
  pinpoint-hbase:
    container_name: "${PINPOINT_HBASE_NAME}"
    image: "pinpointdocker/pinpoint-hbase:${PINPOINT_VERSION}"
    networks:
      - pinpoint

    volumes:
      - /home/pinpoint/hbase
      - /home/pinpoint/zookeeper
    restart: always

  pinpoint-mysql:
    container_name: pinpoint-mysql
    restart: always
    image: "pinpointdocker/pinpoint-mysql:${PINPOINT_VERSION}"
    hostname: pinpoint-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}

    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - pinpoint

  pinpoint-web:
    container_name: "${PINPOINT_WEB_NAME}"
    image: "pinpointdocker/pinpoint-web:${PINPOINT_VERSION}"

    depends_on:
      - pinpoint-hbase
      - pinpoint-mysql
    restart: always
    ports:
      - "9003:8080"
    environment:
      - CLUSTER_ENABLE=${CLUSTER_ENABLE}
      - CLUSTER_ZOOKEEPER_ADDRESS=${CLUSTER_ZOOKEEPER_ADDRESS}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - ANALYTICS=${ANALYTICS}
      - HBASE_HOST=${HBASE_HOST}
      - HBASE_PORT=${HBASE_PORT}
      - DEBUG_LEVEL=${WEB_DEBUG_LEVEL}
      - CONFIG_SHOW_APPLICATIONSTAT=${CONFIG_SHOW_APPLICATIONSTAT}
      - BATCH_ENABLE=${BATCH_ENABLE}
      - BATCH_SERVER_IP=${BATCH_SERVER_IP}
      - BATCH_FLINK_SERVER=${BATCH_FLINK_SERVER}
      - JDBC_DRIVER=${JDBC_DRIVER}
      - JDBC_URL=${JDBC_URL}
      - JDBC_USERNAME=${JDBC_USERNAME}
      - JDBC_PASSWORD=${JDBC_PASSWORD}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_PROPERTIES_MAIL_TRANSPORT_PROTOCOL=${MAIL_PROPERTIES_MAIL_TRANSPORT_PROTOCOL}
      - MAIL_PROPERTIES_MAIL_SMTP_AUTH=${MAIL_PROPERTIES_MAIL_SMTP_AUTH}
      - MAIL_PROPERTIES_MAIL_SMTP_PORT=${MAIL_PROPERTIES_MAIL_SMTP_PORT}
      - MAIL_PROPERTIES_MAIL_SMTP_FROM=${MAIL_PROPERTIES_MAIL_SMTP_FROM}
      - MAIL_PROPERTIES_MAIL_STARTTLS_ENABLE=${MAIL_PROPERTIES_MAIL_STARTTLS_ENABLE}
      - MAIL_PROPERTIES_MAIL_STARTTLS_REQUIRED=${MAIL_PROPERTIES_MAIL_STARTTLS_REQUIRED}
      - MAIL_PROPERTIES_MAIL_DEBUG=${MAIL_PROPERTIES_MAIL_DEBUG}
    links:
      - "pinpoint-mysql:pinpoint-mysql"
    networks:
      - pinpoint

  pinpoint-collector:
    container_name: "${PINPOINT_COLLECTOR_NAME}"
    image: "pinpointdocker/pinpoint-collector:${PINPOINT_VERSION}"

    depends_on:
      - pinpoint-hbase
    restart: always
    networks:
      - pinpoint
    environment:
      - CLUSTER_ENABLE=${CLUSTER_ENABLE}
      - CLUSTER_ZOOKEEPER_ADDRESS=${CLUSTER_ZOOKEEPER_ADDRESS}
      - HBASE_HOST=${HBASE_HOST}
      - HBASE_PORT=${HBASE_PORT}
      - FLINK_CLUSTER_ENABLE=${FLINK_CLUSTER_ENABLE}
      - FLINK_CLUSTER_ZOOKEEPER_ADDRESS=${FLINK_CLUSTER_ZOOKEEPER_ADDRESS}
      - DEBUG_LEVEL=${COLLECTOR_DEBUG_LEVEL}

  #zookeepers
  zoo1:
    image: zookeeper:3.4
    restart: always
    hostname: zoo1
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888
    networks:
      - pinpoint

  zoo2:
    image: zookeeper:3.4
    restart: always
    hostname: zoo2
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=0.0.0.0:2888:3888 server.3=zoo3:2888:3888
    networks:
      - pinpoint

  zoo3:
    image: zookeeper:3.4
    restart: always
    hostname: zoo3
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=0.0.0.0:2888:3888
    networks:
      - pinpoint
  #------------------- pinpoint end-----------------------


volumes:
  data-volume:
  mysql_data:

networks:
  cloudrs:
  pinpoint:





