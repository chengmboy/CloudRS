version: '3'
services:
  cloudrs-register:
    networks:
      - cloudrs
      - pinpoint
    build:
      context: ./
      dockerfile: Dockerfile-register
      args:
        - PINPOINT_VERSION=${PINPOINT_VERSION}
        - AGENT_ID=cloudrs-register-1
        - APP_NAME=cloudrs-register
    volumes:
      - data-volume:/pinpoint-agent
    restart: always
    ports:
      - 9992:9991

  cloudrs-config:
    networks:
      - cloudrs
      - pinpoint
    build:
      context: ./
      dockerfile: Dockerfile-config
      args:
        - PINPOINT_VERSION=${PINPOINT_VERSION}
        - AGENT_ID=cloudrs-config-1
        - APP_NAME=cloudrs-config
    volumes:
      - data-volume:/pinpoint-agent
    restart: always


  cloudrs-auth:
    networks:
      - cloudrs
      - pinpoint
    build:
      context: ./
      dockerfile: Dockerfile-auth
      args:
        - PINPOINT_VERSION=${PINPOINT_VERSION}
        - AGENT_ID=cloudrs-auth-1
        - APP_NAME=cloudrs-auth
    volumes:
      - data-volume:/pinpoint-agent
    restart: always

  cloudrs-gateway:
    networks:
      - cloudrs
      - pinpoint
    build:
      context: ./
      dockerfile: Dockerfile-gateway
      args:
        - PINPOINT_VERSION=${PINPOINT_VERSION}
        - AGENT_ID=cloudrs-gateway-1
        - APP_NAME=cloudrs-gateway
    volumes:
      - data-volume:/pinpoint-agent
    restart: always
    ports:
      - 8080:8080

  cloudrs-uc:
    networks:
      - cloudrs
      - pinpoint
    build:
      context: ./
      dockerfile: Dockerfile-uc
      args:
        - PINPOINT_VERSION=${PINPOINT_VERSION}
        - AGENT_ID=cloudrs-uc-1
        - APP_NAME=cloudrs-uc-service
    volumes:
      - data-volume:/pinpoint-agent
    restart: always

  cloudrs-payment:
    networks:
      - cloudrs
      - pinpoint
    build:
      context: ./
      dockerfile: Dockerfile-payment
      args:
        - PINPOINT_VERSION=${PINPOINT_VERSION}
        - AGENT_ID=cloudrs-payment-1
        - APP_NAME=cloudrs-payment-service
    volumes:
      - data-volume:/pinpoint-agent
    restart: always

  cloudrs-monitor:
    networks:
      - cloudrs
    build:
      context: ./
      dockerfile: Dockerfile-monitor
    restart: always
    ports:
      - 9000:9000

  cloudrs-turbine:
    networks:
      - cloudrs
    build:
      context: ./
      dockerfile: Dockerfile-turbine
    restart: always
    ports:
      - 8600:8600

  rabbit1:
    image: bijukunjummen/rabbitmq-server:3.7.0
    hostname: rabbit1
    networks:
      - cloudrs
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=cheng
      - RABBITMQ_DEFAULT_PASS=123456

  rabbit2:
    image: bijukunjummen/rabbitmq-server:3.7.0
    hostname: rabbit2
    networks:
      - cloudrs
    environment:
      - CLUSTERED=true
      - CLUSTER_WITH=rabbit1
      - RAM_NODE=true
    ports:
      - "5673:5672"
      - "15673:15672"

  rabbit3:
    image: bijukunjummen/rabbitmq-server:3.7.0
    hostname: rabbit3
    networks:
      - cloudrs
    environment:
      - CLUSTERED=true
      - CLUSTER_WITH=rabbit1

  redis-cluster:
    image: grokzen/redis-cluster:5.0.5
    networks:
      - cloudrs

  mysql-master:
    image: mysql
    volumes:
      - ./mysql/config/master.cnf:/etc/mysql/conf.d/my.cnf
      - ./mysql/init/master_init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - MYSQL_ROOT_PASSWORD=123456
    networks:
      - cloudrs
#
#  mysql-slave:
#    image: mysql
#    volumes:
#      - ./mysql/config/slave.cnf:/etc/mysql/conf.d/my.cnf
#      - ./mysql/init/slave_init.sql:/docker-entrypoint-initdb.d/init.sql
#    environment:
#      - MYSQL_ROOT_PASSWORD=slv
#      - MYSQL_DATABASE=auth
#      - MYSQL_USER=slv
#      - MYSQL_PASSWORD=slv
#    networks:
#      - cloudrs



#  pinpoint-agent:
#    container_name: "${PINPOINT_AGENT_NAME}"
#    image: "pinpointdocker/pinpoint-agent:${PINPOINT_VERSION}"
#
#    restart: unless-stopped
#
#    networks:
#      - cloudrs
#    volumes:
#      - data-volume:/pinpoint-agent
#    environment:
#      - COLLECTOR_IP=${COLLECTOR_IP}
#      - COLLECTOR_TCP_PORT=${COLLECTOR_TCP_PORT}
#      - COLLECTOR_STAT_PORT=${COLLECTOR_STAT_PORT}
#      - COLLECTOR_SPAN_PORT=${COLLECTOR_SPAN_PORT}
#      - PROFILER_SAMPLING_RATE=${PROFILER_SAMPLING_RATE}
#      - DEBUG_LEVEL=${AGENT_DEBUG_LEVEL}

volumes:
  data-volume:

networks:
  cloudrs:
  pinpoint:
    external:
      name: docker_pinpoint





